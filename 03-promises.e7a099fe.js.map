{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,eAAgBJ,SAASC,cAAc,oBAiCzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCbT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC/BC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,eAAegB,OAE1C,GAAIC,EAAO,GAAKH,EAAQ,GAAKI,GAAU,EAErC,YADAC,EAAA3B,GAAS4B,OAAOC,QAAQ,6BAI1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAC/BrB,EAAcqB,EAAI,EAAGR,GAClBS,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA3B,GAAS4B,OAAOI,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA3B,GAAS4B,OAAOC,QACd,sBAAoBnB,QAAeC,MAAU,IAGnDW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  stepDelay: document.querySelector('[name=\"step\"]'),\n  amountPromises: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const delay = Number(refs.firstDelay.value);\n  const step = Number(refs.stepDelay.value);\n  const amount = Number(refs.amountPromises.value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notiflix.Notify.failure('Please enter valid values');\n    return;\n  }\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","stepDelay","amountPromises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.e7a099fe.js.map"}